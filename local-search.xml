<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>题解：ABC411B</title>
    <link href="/2025/06/24/%E9%A2%98%E8%A7%A3%EF%BC%9AABC411B/"/>
    <url>/2025/06/24/%E9%A2%98%E8%A7%A3%EF%BC%9AABC411B/</url>
    
    <content type="html"><![CDATA[<h1>题解：ABC411B</h1><h2 id="题目简介">题目简介</h2><p>给定一个序列中两项元素的差，求出两个点之间的距离。</p><h2 id="解题方法">解题方法</h2><p>因为数据范围<strong>较小</strong>，$2 \leq N \leq 50$，所以可以使用$O(n^2)$的解法也不会<code>TLE</code>。</p><p>暴力枚举$i$和$j$，然后累加就可以了。</p><h2 id="解题代码">解题代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> n;<br>vector&lt;<span class="hljs-type">int</span>&gt;<span class="hljs-built_in">a</span>(<span class="hljs-number">55</span>);<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n<span class="hljs-number">-1</span>;i++)<br>        cin&gt;&gt;a[i];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n<span class="hljs-number">-1</span>;i++)&#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=i<span class="hljs-number">+1</span>;j&lt;=n;j++)&#123;<br>            <span class="hljs-type">int</span> ans=<span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> k=i;k&lt;j;k++)<br>                ans+=a[k];<br>            cout&lt;&lt;ans&lt;&lt;<span class="hljs-string">&quot; &quot;</span>;<br>        &#125;<br>        cout&lt;&lt;endl;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>题解</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AtCoder</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>题解：ABC411C</title>
    <link href="/2025/06/24/%E9%A2%98%E8%A7%A3%EF%BC%9AABC411C/"/>
    <url>/2025/06/24/%E9%A2%98%E8%A7%A3%EF%BC%9AABC411C/</url>
    
    <content type="html"><![CDATA[<h1>题解：ABC 411 C</h1><h2 id="题目简介">题目简介</h2><p>给定一个长度为$N$的序列，初始所有所有格子都是白色，有$Q$个操作，每次给定一个操作数$A_i$，将$A_i$的颜色反转，并求出序列中有几个黑色子序列。</p><h2 id="解题方法">解题方法</h2><p>因为更改$A_i$的颜色只会影响到$A_i-1$和$A_i+1$，所以只用考虑黑色子序列的个数以及$A_i-1$和$A_i+1$的变化。</p><h3 id="假设使用1表示白，0表示黑：">假设使用<code>1</code>表示白，<code>0</code>表示黑：</h3><p>如果$A_i-1$和$A_i+1$为一黑一白，则修改当前颜色只会延长子序列的长度，不会增加数量。</p><p><code>1 1 0</code>-&gt;<code>1 0 0</code>数量没有变化。</p><p><code>1 0 0</code>-&gt;<code>1 1 0</code>数量依然没有变化。</p><p>所以$A_i-1$和$A_i+1$的颜色<strong>相同</strong>，则会发生变化。</p><h3 id="分两种情况分类讨论：">分两种情况分类讨论：</h3><p><strong>如果$A_i$反转后为黑色：</strong></p><ol><li><p>原序列：<code>1 0 1</code>-&gt;<code>1 1 1</code>，容易发现数量减少了<code>1</code>。</p></li><li><p>原序列：<code>0 0 0</code>-&gt;<code>0 1 0</code>，容易发现数量增加了<code>1</code>。</p></li></ol><p><strong>如果$A_i$反转后为白色：</strong></p><ol><li><p>原序列：<code>1 1 1</code>-&gt;<code>1 0 1</code>，容易发现数量增加了<code>1</code>。</p></li><li><p>原序列：<code>0 1 0</code>-&gt;<code>0 0 0</code>，容易发现数量减少了<code>1</code>。</p></li></ol><hr><p>容易发现两种情况<strong>相反</strong>。</p><h3 id="注意最后的数量最多为0，所以数量在处理时要注意特殊处理。">注意最后的数量最多为<code>0</code>，所以数量在处理时要注意特殊处理。</h3><h2 id="解题代码">解题代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> n,q,sum=<span class="hljs-number">0</span>;<br>vector&lt;<span class="hljs-type">int</span>&gt;<span class="hljs-built_in">a</span>(<span class="hljs-number">500005</span>,<span class="hljs-number">1</span>);<span class="hljs-comment">//存储序列</span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    cin&gt;&gt;n&gt;&gt;q;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=q;i++)&#123;<br>        <span class="hljs-type">int</span> x;<br>        cin&gt;&gt;x;<br>        a[x]^=<span class="hljs-number">1</span>;<span class="hljs-comment">//反转当前状态</span><br>        <span class="hljs-keyword">if</span>(a[x]==<span class="hljs-number">0</span>)&#123;<span class="hljs-comment">//如果当前反转后为1</span><br>            <span class="hljs-keyword">if</span>(a[x<span class="hljs-number">+1</span>]==<span class="hljs-number">1</span> &amp;&amp; a[x<span class="hljs-number">-1</span>]==<span class="hljs-number">1</span>)<span class="hljs-comment">//第一种情况</span><br>                sum++;<span class="hljs-comment">//增加</span><br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(a[x<span class="hljs-number">+1</span>]==<span class="hljs-number">0</span> &amp;&amp; a[x<span class="hljs-number">-1</span>]==<span class="hljs-number">0</span>)<span class="hljs-comment">//第二种情况</span><br>                sum--;<span class="hljs-comment">//减少</span><br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">if</span>(a[x<span class="hljs-number">+1</span>]==<span class="hljs-number">1</span> &amp;&amp; a[x<span class="hljs-number">-1</span>]==<span class="hljs-number">1</span>)<span class="hljs-comment">//第一种情况</span><br>                sum--;<span class="hljs-comment">//减少</span><br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(a[x<span class="hljs-number">+1</span>]==<span class="hljs-number">0</span> &amp;&amp; a[x<span class="hljs-number">-1</span>]==<span class="hljs-number">0</span>)<span class="hljs-comment">//第二种情况</span><br>                sum++;<span class="hljs-comment">//增加</span><br>        &#125;<br>        sum=<span class="hljs-built_in">max</span>(sum,<span class="hljs-number">0</span>);<span class="hljs-comment">//避免减到负数</span><br>        cout&lt;&lt;sum&lt;&lt;endl;<span class="hljs-comment">//输出答案</span><br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>题解</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AtCoder</tag>
      
      <tag>洛谷</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
